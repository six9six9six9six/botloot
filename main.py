import requests as rq
import json
import telebot
from operator import itemgetter
from time import sleep

token = 'TOKEN'
bot = telebot.TeleBot(token, parse_mode='html')

#–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help
#–æ—Ç—Å—ã–ª–∞–µ–º –≥–∏—Ñ–∫—É


@bot.message_handler(commands=['help'])

def start(message):
    
	bot.send_animation(message.chat.id, r'https://dota2.ru/img/memes/2022/04/74262.gif')

#–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
@bot.message_handler(commands=['start'])

def start1(message):
    
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç –ì—É–ª–µ–Ω—ã—à!ü§°')

#–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /percent.
#–ø—Ä–∏–Ω–∏–º–∞–µ–º –¥–≤–∞ —á–∏—Å–ª–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ —á–∏—Å–ª–∞–º–∏, –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏—Ç–∞.
@bot.message_handler(commands=['percent'])

def percent(message):
    
    split_message = message.text.split()
    
    try:
        split_message[0] == '/percent' and split_message[1].isdigit() and split_message[2].isdigit()
        buy = float(split_message[1])
        sell = float(split_message[2])
        x = (buy - sell) * 100 / -buy
        bot.reply_to(message, f'Buy price: {buy}\nSell price: {sell}\nPercent: {str(round(x, 2))} %')
#–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
    except (ValueError, IndexError, UnboundLocalError, ZeroDivisionError):
        bot.reply_to(
            message, 'Bought or sold prices \nTry like: /percent 70 100 !ü§°')

#—Ö–∞–Ω–¥–ª–µ—Ä –Ω–∞ –ø–∞—Ä—Å —Ä–∞—Å—Ç–∞
@bot.message_handler(commands=['rust'])
def rust(message):
    
    response = rq.get('https://loot.farm/fullpriceRUST.json')
    items = json.loads(response.text)
    sor = sorted(items, key=itemgetter('rate'), reverse=True)
    continer = ''
    counter = 0
    for item in sor:
        
        have = item['have']
        max = item['max']
        name = item['name']
        price = item['price']/100*0.95
        so = item['rate']/100*100-100
        so1 = item['rate']
        if have < max and so1 >= 115:
            
            counter += 1
            continer += f'<code>{name}</code>:\nC—Ç–æ–∏–º–æ—Å—Ç—å <b>{round(price, 2)}$</b>\n–ü—Ä–æ—Ü–µ–Ω—Ç <b>{round(so, 2)} %</b>\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –±–æ—Ç–∞—Ö: <b>{have}/{max}</b>.\n\n'
            
            if counter == 10:
                bot.send_message(message.chat.id, continer)
                sleep(1)
                counter = 0
                continer = ''
#—Ö–∞–Ω–¥–ª–µ—Ä –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –¥–æ—Ç—ã
@bot.message_handler(commands=['dota'])
def dota(message):
    response = rq.get('https://loot.farm/fullpriceDOTA.json')
    items = json.loads(response.text)
    sor = sorted(items, key=itemgetter('rate'), reverse=True)
    continer = ''
    counter = 0
    
    for item in sor:
        have = item['have']
        max = item['max']
        name = item['name']
        price = item['price']/100*0.95
        so = item['rate']/100*100-100
        so1 = item['rate']
        
        if have < max and so1 >= 115:
            counter += 1
            continer += f'<code>{name}</code>:\nC—Ç–æ–∏–º–æ—Å—Ç—å <b>{round(price, 2)}$</b>\n–ü—Ä–æ—Ü–µ–Ω—Ç <b>{round(so, 2)} %</b>\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –±–æ—Ç–∞—Ö: <b>{have}/{max}</b>.\n\n'
            
            if counter == 10:
                bot.send_message(message.chat.id, continer)
                sleep(1)
                counter = 0
                continer = ''

#—Ö–∞–Ω–¥–ª–µ—Ä –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –∫—Å–≥–æ
@bot.message_handler(commands=['csgo'])

def csgo(message):
    
    response = rq.get('https://loot.farm/fullprice.json')
    items = json.loads(response.text)
    sor = sorted(items, key=itemgetter('rate'), reverse=True)
    continer = ''
    counter = 0
    
    for item in sor:
        have = item['have']
        max = item['max']
        name = item['name']
        price = item['price']/100*0.95
        so = item['rate']/100*100-100
        so1 = item['rate']
        
        if have < max and so1 >= 120:
            counter += 1
            continer += f'<code>{name}</code>:\nC—Ç–æ–∏–º–æ—Å—Ç—å <b>{round(price, 2)}$</b>\n–ü—Ä–æ—Ü–µ–Ω—Ç <b>{round(so, 2)} %</b>\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –±–æ—Ç–∞—Ö: <b>{have}/{max}</b>.\n\n'
            
            if counter == 10:
                bot.send_message(message.chat.id, continer)
                sleep(1)
                counter = 0
                continer = ''

#—Ö–∞–Ω–¥–ª–µ—Ä –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ —Ç—Ñ2
@bot.message_handler(commands=['TF2'])

def tf(message):
    
    response = rq.get('https://loot.farm/fullpriceTF2.json')
    items = json.loads(response.text)
    sor = sorted(items, key=itemgetter('rate'), reverse=True)
    continer = ''
    counter = 0
    
    for item in sor:
        have = item['have']
        max = item['max']
        name = item['name']
        price = item['price']/100*0.95
        so = item['rate']/100*100-100
        so1 = item['rate']
        
        if have < max and so1 >= 115:
            counter += 1
            continer += f'<code>{name}</code>:\nC—Ç–æ–∏–º–æ—Å—Ç—å <b>{round(price, 2)}$</b>\n–ü—Ä–æ—Ü–µ–Ω—Ç <b>{round(so, 2)} %</b>\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –±–æ—Ç–∞—Ö: <b>{have}/{max}</b>.\n\n'
            
            if counter == 10:
                bot.send_message(message.chat.id, continer)
                sleep(1)
                counter = 0
                continer = ''

#—Ñ—É–Ω–∫—Ü–∏—è —ç—Ö–æ–±–æ—Ç–∞
@bot.message_handler(content_types=["text"])

def repeat_all_messages(message):
    
    bot.send_message(message.chat.id, message.text)
    bot.reply_to(message, 'ü§°–Ø, –Ω–∞—Å—Ç–æ—è—â–∏–π –≥—É–ª—å, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–µ–π–∫–∏!ü§°')
    
    
bot.polling()
